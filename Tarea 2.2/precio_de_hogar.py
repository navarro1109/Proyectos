# -*- coding: utf-8 -*-
"""Precio de hogar.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zjdCEnJUrZ-n_ghS93KsHH9HKo6u--mM
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

dfcasas = pd.read_csv('./housing.csv')
dfcasas.head()

dfcasas.hist(figsize=(10,10), bins=50, edgecolor='red')
plt.show()

dfcasas.dropna(subset=['total_bedrooms'], inplace=True)
dfcasas['housing_median_age'] = np.minimum(dfcasas['housing_median_age'], 50)
dfcasas['median_house_value'] = np.minimum(dfcasas['median_house_value'], 500000)
dfcasas['median_income'] = np.minimum(dfcasas['median_income'], 15)

dfcasas = pd.get_dummies(dfcasas, columns=['ocean_proximity'], drop_first=True)

dfcasas['rooms_per_household'] = dfcasas['total_rooms'] / dfcasas['households']
dfcasas['bedrooms_per_room'] = dfcasas['total_bedrooms'] / dfcasas['total_rooms']
dfcasas['population_per_household'] = dfcasas['population'] / dfcasas['households']

X = dfcasas.drop(columns=['median_house_value', 'total_rooms', 'total_bedrooms', 'population', 'households'])
y = dfcasas['median_house_value']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


rf_model = RandomForestRegressor(
    n_estimators=300,
    max_depth=30,
    min_samples_leaf=2,
    random_state=42
)
rf_model.fit(X_train, y_train)

y_pred_rf = rf_model.predict(X_test)
score_rf = r2_score(y_test, y_pred_rf)

print(f"Puntaje de precisi√≥n (R^2): {score_rf:.2f}")